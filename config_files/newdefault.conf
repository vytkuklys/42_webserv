#Default Configuration File

server {
	port 8080;	

	srvr_name yes.com;

	error_pages ../document/html_errors;

	client_max_body_size 8M;

	location / {
		root ?;
		method get post;
		indx /;
	}

	location /upload.html {
		method post;
		indx upload.html;
	}

	location /index.html {
		method get;
		indx index.html;
	}
}

server {
	port 8081;

	srvr_name no.com;

	error_pages ../document/html_errors;

	client_max_body_size 3M;

	location /index.html {
		root x;
	}
}

server {
	port 8082;

	srvr_name ok.com;

	error_pages ../document/html_errors;

	client_max_body_size 5M;
}

; • The first SERVER for a host:PORT will be the default for this host:PORT (that means it will answer to all the requests that don’t belong to an other SERVER).
; • Setup routes with one or multiple of the following rules/configuration (routes wont be using regexp):
; ◦ Define a list of accepted HTTP methods for the route.
; ◦ Define a HTTP redirection.
; ◦ Define a directory or a file from where the file should be searched (for example, if url /kapouet is rooted to /tmp/www, url /kapouet/pouic/toto/pouet is /tmp/www/pouic/toto/pouet).
; ◦ Turn on or off directory listing.
; ◦ Set a default file to answer if the request is a directory.
; ◦ Execute CGI based on certain file extension (for example .php).
; ◦ Make the route able to accept uploaded files and configure where they should be saved.
; ∗ Do you wonder what a CGI is?
; ∗ Because you won’t call the CGI directly, use the full path as PATH_INFO.
; ∗ Just remember that, for chunked request, your SERVER needs to unchunked it and the CGI will expect EOF as end of the body.
; ∗ Same things for the output of the CGI. If no content_length is returned from the CGI, EOF will mark the end of the returned data.
; ∗ Your program should call the CGI with the file requested as first argument.
; ∗ The CGI should be run in the correct directory for relative path file access.
; ∗ Your SERVER should work with one CGI (php-CGI, Python, and so forth).