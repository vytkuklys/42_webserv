Listening on port(s): 8080
 select
handle_new_client
[1m[32m
 ---- ACCEPTED NEW ---- [0m[0m fd 4
 select
process socket information
fill header fd4
done with header

---START LINE 
PUT /put_test/ HTTP/1.1   
Accept */*
Accept-Encoding gzip, deflate, br
Connection keep-alive
Content-Length 99913
Content-Type image/jpeg
Host localhost:8080
Postman-Token b09ee050-2028-42f3-84fd-3bcce79730c7
User-Agent PostmanRuntime/7.29.0


creat cild with pid30209
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
HTTP_ACCEPT=*/*
HTTP_ACCEPT_ENCODING=gzip, deflate, br
HTTP_CONNECTION=keep-alive
HTTP_CONTENT_LENGTH=99913
HTTP_CONTENT_TYPE=image/jpeg
HTTP_HOST=localhost:8080
HTTP_POSTMAN_TOKEN=b09ee050-2028-42f3-84fd-3bcce79730c7
HTTP_USER_AGENT=PostmanRuntime/7.29.0
execve
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
 parsing_position= 4
done with know client
 select
process socket information
fill header fd4
fill_header
close regular body pid = 30209
done with waiting
 parsing_position= 5
set fd to write list
done with know client
 select
send first
Responder constructor
error exists_path
end of response
[1m[34m ---- RESPONDED ---- [0m[0mfd 4
time=1
close socket summe = 0fd=4
 select
handle_new_client
[1m[32m
 ---- ACCEPTED NEW ---- [0m[0m fd 4
 select
process socket information
fill header fd4
done with header

---START LINE 
GET /put_test/../index.html HTTP/1.1   
Accept */*
Accept-Encoding gzip, deflate, br
Connection keep-alive
Host localhost:8080
Postman-Token b09ee050-2028-42f3-84fd-3bcce79730c7
Referer http://localhost:8080/put_test/
User-Agent PostmanRuntime/7.29.0


 parsing_position= 5
set fd to write list
done with know client
 select
send first
Responder constructor
error exists_path
has_access == false/put_test/*
end of response
[1m[34m ---- RESPONDED ---- [0m[0mfd 4
 select
erase fd=4
constructor
process socket information
set fd to write list
done with know client
 select
send first
end of response
[1m[34m ---- RESPONDED ---- [0m[0mfd 4
time=0
close socket summe = 0fd=4
 select
 select
 select
 select
 select
 select
 select
 select
 select
